#Insert into User table

'INSERT INTO sls4400.User VALUES("{0}", "{1}", "{2}", "{3}")'.format(username, password, email, user_type)

#If a city official is being added, add the city official to the CityOfficial table

'INSERT INTO sls4400.CityOfficial VALUES("{0}", "{1}", "{2}", "{3}", NULL)'.format(username, city, state, title)

#Check a username and password to see if the combination is valid

"SELECT * FROM sls4400.User " \
            "WHERE username=" + '"' + username + '"' + \
            " AND password=" + '"' + password + '"'

#Get a list of states (for rendering the dropdown)

"SELECT DISTINCT state from sls4400.CityState"

#Get a list of cities for a given state

"SELECT city from sls4400.CityState where state=" + '"' + state + '"'

#Get a list of all cities

"select city from sls4400.CityState"

#See if a username/email is unique

"SELECT count(*) FROM sls4400.User WHERE username=" + '"' + username + '"'
"SELECT count(*) FROM sls4400.User WHERE email=" + '"' + email + '"'

#Check if a city official is approved

'SELECT approved FROM sls4400.CityOfficial WHERE username="{0}"'.format(username)

#Check if a location name for a new POI already exists

'SELECT count(*) FROM sls4400.POI WHERE locname="{0}"'.format(locname)

#Add a new POI

'insert into sls4400.POI values("{0}", "{1}", 0, NULL, "{2}", "{3}")'.format(locname, zipcode, city, state)

#Add data point into database

'insert into sls4400.DataPoint values("{0}", "{1}", "{2}", NULL, "{3}")'.format(datetime, poiname, value, type)

#Get a list of all POIs (location names)

'select locname from sls4400.POI'

#Get a list of all POIs (full tuples)

'select * from sls4400.POI'

#Get a list of data types

'select type from sls4400.DataType'

#Get pending (unapproved) data points

'select * from sls4400.DataPoint where approved is NULL'

#Approve or reject a data point

query = 'update sls4400.DataPoint ' \
                'set approved={0} ' \
                'where datetime="{1}" ' \
                'and poiname="{2}"'.format(query_approve_or_reject, datetime, poiname)

#Approve or reject a city official

'update sls4400.CityOfficial ' \
                'set approved={0} ' \
                'where username="{1}"'.format(query_approve_or_reject, city_official)

#Get the pending (unapproved) city officials

'select * from sls4400.CityOfficial natural join sls4400.User where approved is NULL'

#This function builds a query to filter data points

def get_filtered_data_points_query(form, location_name):
    query = 'select datetime, poiname, value, type from sls4400.DataPoint where poiname="{0}" and approved=1 '.format(location_name)
    print query
    if filter_poi_all_blank(form):
        query += " order by datetime asc"
        return query
    else:
        query += "and "
    conditions = []
    if form["date-from"] != "" and form["time-from"] != "":
        datetime_from = form["date-from"] + " " + form["time-from"]
        conditions.append('datetime>="{0}"'.format(datetime_from))
    if form["date-from"] != "" and form["time-from"] == "":
        conditions.append('datetime>="{0}"'.format(form["date-from"]))
    if form["date-to"] != "" and form["time-to"] != "":
        datetime_to = form["date-to"] + " " + form["time-to"]
        conditions.append('datetime<="{0}"'.format(datetime_to))
    if form["date-to"] != "" and form["time-to"] == "":
        conditions.append('datetime<="{0}"').format["date-to"]
    if form["value-from"] != "":
        conditions.append('value>={0}'.format(form["value-from"]))
    if form["value-to"] != "":
        conditions.append('value<={0}'.format(form["value-to"]))
    if form["type"] != "":
        conditions.append('type="{0}"'.format(form["type"]))

    to_add = " and ".join(conditions)
    query += to_add
    query += " order by datetime asc"
    print query
    return query

#This function builds a query to filter POIs

def get_filtered_pois_query(form):
    query = "select * from sls4400.POI"
    if filter_poi_all_blank(form):
        return query
    else:
        query += " where "
    conditions = []
    if form["city"] != "":
        conditions.append('city="{0}"'.format(form["city"]))
    if form["state"] != "":
        conditions.append('state="{0}"'.format(form["state"]))
    if form["poi"] != "":
        conditions.append('locname="{0}"'.format(form['poi']))
    if form["zipcode"] != "":
        conditions.append('zipcode="{0}"'.format(form['zipcode']))
    if form['date-flagged-to'] != "":
        conditions.append('dateflagged<="{0}"'.format(form['date-flagged-to']))
    if form['date-flagged-from'] != "":
        conditions.append('dateflagged>="{0}"'.format(form['date-flagged-from']))
    if 'flagged' in form:
        if form['flagged'] == "on":
            conditions.append('flag=1')
    to_add = " and ".join(conditions)
    query += to_add
    print query
    return query

#Get the data points for a certain location

'select datetime, poiname, value, type from sls4400.DataPoint' \
            ' where poiname="{0}" and approved=1 order by datetime asc'.format(location_name)

#Flag a POI

'update sls4400.POI set flag={0}, dateflagged="{1}" where locname="{2}"'.format(flag_value, get_date(), location_name)

#Unflag POI

'update sls4400.POI set flag=0, dateflagged=NULL where locname="{0}"'.format(location_name)

#Check flag for a location


'select flag from sls4400.POI where locname="{0}"'.format(location_name)


#POI Report

'select * from \
        (select t1.locname, t1.city, t1.state, t1.zipcode, t1.avaq, t1.minaq, t1.maxaq, t2.avmold, t2.minmold, t2.maxmold, t1.flag from \
        (select locname, city, state, zipcode, flag, dateflagged, avg(value) as avaq, min(value) as minaq, max(value) as maxaq  from sls4400.DataPoint join sls4400.POI on locname=poiname where type="Air Quality" group by locname) t1 \
        left outer join \
        (select locname, city, state, zipcode, flag, dateflagged, avg(value) as avmold, min(value) as minmold, max(value) as maxmold from sls4400.DataPoint join sls4400.POI on locname=poiname where type="Mold" group by locname) t2  \
        on t1.locname=t2.locname \
        union \
        select t4.locname, t4.city, t4.state, t4.zipcode, t3.avaq, t3.minaq, t3.maxaq, t4.avmold, t4.minmold, t4.maxmold, t3.flag from \
        (select locname, city, state, zipcode, flag, dateflagged, avg(value) as avaq, min(value) as minaq, max(value) as maxaq from sls4400.DataPoint join sls4400.POI on locname=poiname where type="Air Quality" group by locname) t3 \
        right outer join \
        (select locname, city,state, zipcode, flag, dateflagged, avg(value) as avmold, min(value) as minmold, max(value) as maxmold from sls4400.DataPoint join sls4400.POI on locname=poiname where type="Mold" group by locname) t4  \
        on t3.locname=t4.locname) z1 \
        join \
        (select poiname, count(*) from sls4400.DataPoint group by poiname) z2 \
        on locname=poiname'